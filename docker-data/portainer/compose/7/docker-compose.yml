version: "3"

# optional ports are specified throughout for more advanced use cases.

services:
  budibase-app-service:
    networks:
      - web
    restart: unless-stopped
    image: budibase.docker.scarf.sh/budibase/apps
    container_name: bbapps
    environment:
      SELF_HOSTED: 1
      COUCH_DB_URL: http://${COUCH_DB_USER}:${COUCH_DB_PASSWORD}@budibase-couchdb-service:5984
      WORKER_URL: http://budibase-worker-service:4003
      MINIO_URL: http://budibase-minio-service:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      INTERNAL_API_KEY: ${INTERNAL_API_KEY}
      BUDIBASE_ENVIRONMENT: ${BUDIBASE_ENVIRONMENT}
      PORT: 4002
      API_ENCRYPTION_KEY: ${API_ENCRYPTION_KEY}
      JWT_SECRET: ${JWT_SECRET}
      LOG_LEVEL: info
      ENABLE_ANALYTICS: "true"
      REDIS_URL: budibase-redis-service:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      BB_ADMIN_USER_EMAIL: ${BB_ADMIN_USER_EMAIL}
      BB_ADMIN_USER_PASSWORD: ${BB_ADMIN_USER_PASSWORD}
      PLUGINS_DIR: ${PLUGINS_DIR}
      OFFLINE_MODE: ${OFFLINE_MODE:-}
      API_REQ_LIMIT_PER_SEC: 200
    depends_on:
      - budibase-worker-service
      - budibase-redis-service
  #    volumes:
  #      - /some/path/to/plugins:/plugins

  budibase-worker-service:
    networks:
      - web
    restart: unless-stopped
    image: budibase.docker.scarf.sh/budibase/worker
    container_name: bbworker
    environment:
      SELF_HOSTED: 1
      PORT: 4003
      CLUSTER_PORT: ${MAIN_PORT}
      API_ENCRYPTION_KEY: ${API_ENCRYPTION_KEY}
      JWT_SECRET: ${JWT_SECRET}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_URL: http://budibase-minio-service:9000
      APPS_URL: http://budibase-app-service:4002
      COUCH_DB_USERNAME: ${COUCH_DB_USER}
      COUCH_DB_PASSWORD: ${COUCH_DB_PASSWORD}
      COUCH_DB_URL: http://${COUCH_DB_USER}:${COUCH_DB_PASSWORD}@budibase-couchdb-service:5984
      INTERNAL_API_KEY: ${INTERNAL_API_KEY}
      REDIS_URL: budibase-redis-service:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      OFFLINE_MODE: ${OFFLINE_MODE:-}
    depends_on:
      - budibase-redis-service
      - budibase-minio-service

  budibase-minio-service:
    networks:
      - web
    restart: unless-stopped
    image: minio/minio
    volumes:
      - /workspace/gitpod-supertoken-demo/docker-data/budibase/minio_data:/data
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BROWSER: "on"
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: server /data --console-address ":9001"
    healthcheck:
      test: "timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1"
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "${MINIO_PORT}:9000"
      - "7668:9001"

  budibase-proxy-service:
    networks:
      - web
    restart: unless-stopped
    ports:
      - "${MAIN_PORT}:10000"
    container_name: bbproxy
    image: budibase/proxy
    environment:
      - PROXY_RATE_LIMIT_WEBHOOKS_PER_SECOND=100
      - PROXY_RATE_LIMIT_API_PER_SECOND=200
      - APPS_UPSTREAM_URL=http://budibase-app-service:4002
      - WORKER_UPSTREAM_URL=http://budibase-worker-service:4003
      - MINIO_UPSTREAM_URL=http://budibase-minio-service:9000
      - COUCHDB_UPSTREAM_URL=http://budibase-couchdb-service:5984
      - WATCHTOWER_UPSTREAM_URL=http://budibase-watchtower-service:8080
      - RESOLVER=127.0.0.11
    depends_on:
      - budibase-minio-service
      - budibase-worker-service
      - budibase-app-service
      - budibase-couchdb-service
    #labels:
      #- "traefik.enable=true"
      #- "traefik.http.routers.fake_ait_voting_system.rule=Host(`8081-tomdeltawork-gitpodwork-bnpzg7z241k.ws-us116.gitpod.io`) && PathPrefix(`/budibase`)"  # 匹配路徑
      #- "traefik.http.middlewares.fake_ait_voting_system-strip.stripprefix.prefixes=/budibase"  # 去掉 /budibase 前綴
      #- "traefik.http.services.fake_ait_voting_system.loadbalancer.server.port=10000"  # 將請求轉發到 authentication-backend 的 8080 端口
      #- "traefik.http.routers.fake_ait_voting_system.middlewares=fake_ait_voting_system-strip"  # 使用中間件
      
      #- "traefik.enable=true"
      #- "traefik.http.routers.${DOMAIN_NAME}.rule=HostRegexp(`${DOMAIN_NAME}-{dashed-ip:.*}.traefik.me`)"
      #- "traefik.http.services.${DOMAIN_NAME}.loadbalancer.server.port=10000"
      #- "traefik.http.routers.${DOMAIN_NAME}-tls.tls.domains[0].main=${DOMAIN_NAME}.traefik.me"
      #- "traefik.http.routers.${DOMAIN_NAME}-tls.tls.domains[0].sans=${DOMAIN_NAME}-*.traefik.me"


  budibase-couchdb-service:
    networks:
      - web
    restart: unless-stopped
    image: budibase/couchdb
    environment:
      - COUCHDB_PASSWORD=${COUCH_DB_PASSWORD}
      - COUCHDB_USER=${COUCH_DB_USER}
      - TARGETBUILD=docker-compose
    volumes:
      - /workspace/gitpod-supertoken-demo/docker-data/budibase/couchdb3_data:/opt/couchdb/data

  budibase-redis-service:
    networks:
      - web
    restart: unless-stopped
    image: redis
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    volumes:
      - /workspace/gitpod-supertoken-demo/docker-data/budibase/redis_data:/data

  budibase-watchtower-service:
    networks:
      - web
    restart: always
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --debug --http-api-update bbapps bbworker bbproxy
    environment:
      - WATCHTOWER_HTTP_API=true
      - WATCHTOWER_HTTP_API_TOKEN=budibase
      - WATCHTOWER_CLEANUP=true
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

networks:
  web:
    external: true